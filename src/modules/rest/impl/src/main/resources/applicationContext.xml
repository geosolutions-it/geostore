
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"

	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:ssec="http://cxf.apache.org/spring-security"
	
	xmlns:cxf="http://cxf.apache.org/core"
	
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"

	xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://cxf.apache.org/spring-security http://cxf-spring-security.googlecode.com/svn/trunk/cxf-spring-security/src/main/resources/schemas/spring-security.xsd
            http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security-3.0.4.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<!-- === CXF ======================================================== -->

	<!-- Load CXF modules from cxf.jar -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath*:META-INF/cxf/cxf-*.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml" />

	<!-- === SEC ======================================================== -->
	<import resource="classpath*:geostore-spring-security.xml" />
		
	<!-- ==================================================================== -->
	<!-- === Service providers ============================================== -->
	<!-- ==================================================================== -->
	<bean id="restStoredDataService"
		class="it.geosolutions.geostore.services.rest.impl.RESTStoredDataServiceImpl">
	</bean>

	<bean id="restResourceService"
		class="it.geosolutions.geostore.services.rest.impl.RESTResourceServiceImpl">
	</bean>

	<bean id="restCategoryService"
		class="it.geosolutions.geostore.services.rest.impl.RESTCategoryServiceImpl">
	</bean>

	<bean id="restUserService"
		class="it.geosolutions.geostore.services.rest.impl.RESTUserServiceImpl">
	</bean>

	<bean id="restMiscService"
		class="it.geosolutions.geostore.services.rest.impl.RESTMiscServiceImpl">
	</bean>

	<bean id="restBackupService"
		class="it.geosolutions.geostore.services.rest.impl.RESTBackupServiceImpl">
	</bean>
	
	<bean id="restUserGroupService"
		class="it.geosolutions.geostore.services.rest.impl.RESTUserGroupServiceImpl">
	</bean>
    <bean id="restSessionService" 
    	class="it.geosolutions.geostore.services.rest.impl.RESTSessionServiceImpl">
    	<property name="sessionTimeout" value="86400" />
    </bean>
	<!-- ==================================================================== -->
	<!-- === REST Services ================================================== -->
	<!-- ==================================================================== -->
	<jaxrs:server id="geoStoreRESTStoredData" address="/data">
		<jaxrs:serviceBeans>
			<ref bean="restStoredDataService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTResource" address="/resources">
		<jaxrs:serviceBeans>
			<ref bean="restResourceService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<ref bean="jaxbContextResolver" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTCategory" address="/categories">
		<jaxrs:serviceBeans>
			<ref bean="restCategoryService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTUser" address="/users">
		<jaxrs:serviceBeans>
			<ref bean="restUserService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
		
		<!-- Is the following interceptor still needed to allow autocreation of auth users???
		     anyway the autocreation of auth users must be modified to work with spring security -->
<!-- 		<jaxrs:inInterceptors> -->
<!-- 			<ref bean="autoCreateUsersInterceptor"/> -->
<!-- 		</jaxrs:inInterceptors> -->
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTUserGroup" address="/usergroups">
		<jaxrs:serviceBeans>
			<ref bean="restUserGroupService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTMisc" address="/misc">
		<jaxrs:serviceBeans>
			<ref bean="restMiscService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="geoStoreRESTBackup" address="/backup">
		<jaxrs:serviceBeans>
			<ref bean="restBackupService" />
		</jaxrs:serviceBeans>

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
			<ref bean="jaxbContextResolver" />
			<bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
		</jaxrs:providers>
	</jaxrs:server>
	
    
    <jaxrs:server id="geoStoreRESTSessionService" address="/session">
        <jaxrs:serviceBeans>
          <ref bean="restSessionService"/>
        </jaxrs:serviceBeans>

        <jaxrs:features>
             <cxf:logging/>
        </jaxrs:features>

        <jaxrs:providers>
           <ref bean="jaxbXmlProvider"/>
           <bean class="org.apache.cxf.jaxrs.provider.JSONProvider">
	           <property name="dropRootElement" value="true"/>
	     </bean>
           <ref bean="jaxbContextResolver"/>
           <bean class="it.geosolutions.geostore.services.rest.security.SecurityExceptionMapper"/>
        </jaxrs:providers>    

    </jaxrs:server>
    <!-- ====================================================================-->
    <!-- === REST Services ==================================================-->
    <!-- ====================================================================-->

	<!-- <jaxrs:server id="geoStoreRESTExtJs" address="/extjs">
		<jaxrs:serviceBeans> 
			<ref bean="restExtJsService"/>
		</jaxrs:serviceBeans>
		<jaxrs:features>
			<cxf:logging/> 
		</jaxrs:features>
		<jaxrs:providers>
			<ref bean="jaxbXmlProvider"/>
			<ref bean="jsonProvider"/> 
		</jaxrs:providers>
		<jaxrs:inInterceptors>
			<ref bean="geostoreAuthInterceptor"/> 
			<bean class="org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor"> 
				<property name="securedObject" ref="restExtJsService"/>
			</bean>
		</jaxrs:inInterceptors> 
	</jaxrs:server> -->

	<!-- ==================================================================== -->
	<!-- === CXF Providers ================================================== -->
	<!-- ==================================================================== -->
	<bean id="jaxbXmlProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider" />
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.JSONProvider" />
	<bean id="jaxbContextResolver"
		class="it.geosolutions.geostore.services.rest.utils.JAXBContextResolver" />

	<bean
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="order" value="5" />
		<property name="locations">
			<list>
				<value>classpath*:geostore-ovr.properties</value>
				<value>classpath*:${ovrdir}/geostore-ovr.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Is the following interceptor still needed to allow autocreation of auth users???
     anyway the autocreation of auth users must be modified to work with spring security -->
	<!-- Auto create users interceptor, check also  -->
<!-- 	<bean id="autoCreateUsersInterceptor" -->
<!-- 		class="it.geosolutions.geostore.services.rest.utils.AutoUserCreateGeostoreAuthenticationInterceptor"> -->
<!-- 		<property name="autoCreateUsers" value="true" /> -->
<!-- 		<property name="newUsersRole" value="USER" /> -->
<!-- 		<property name="newUsersPassword" value="NONE" /> -->
<!-- 		<property name="newUsersPasswordHeader" value="" /> -->
<!-- 		<property name="userService" ref="userService" /> -->
<!-- 	</bean> -->

</beans>